-- Users Table
CREATE TABLE Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) UNIQUE NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    password VARCHAR(50) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Projects Table
CREATE TABLE Projects (
    project_id SERIAL PRIMARY KEY,
    project_name VARCHAR(100) NOT NULL,
    start_date DATE,
    end_date DATE,
    manager_id INT REFERENCES Users(user_id)
);

-- Tasks Table
CREATE TABLE Tasks (
    task_id SERIAL PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    description TEXT,
    project_id INT REFERENCES Projects(project_id),
    assigned_to INT REFERENCES Users(user_id),
    due_date DATE,
    status VARCHAR(50)
);

-- Teams Table
CREATE TABLE Teams (
    team_id SERIAL PRIMARY KEY,
    team_name VARCHAR(100) NOT NULL,
    lead_id INT REFERENCES Users(user_id)
);

-- Team Members Table (to handle many-to-many relationship between Users and Teams)
CREATE TABLE Team_Members (
    team_id INT REFERENCES Teams(team_id),
    user_id INT REFERENCES Users(user_id),
    PRIMARY KEY (team_id, user_id)
);

ALTER TABLE Projects ADD COLUMN number_of_tasks INT DEFAULT 0;

ALTER TABLE Tasks ADD COLUMN overdue BOOLEAN DEFAULT FALSE;

ALTER TABLE Tasks ADD COLUMN last_assigned_to INT;
